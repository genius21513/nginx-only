proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=STATIC:10m inactive=7d use_temp_path=off;

# upstream nextjs_upstream {
#   server nextjs-docker_nextjs_1:3000;
# }

upstream metakrew.com_upstream {
  server test-metakrew-dockerize_nextjs_1:3000;
}

server {
  listen 80 default_server;

  server_name _;

  server_tokens off;

  gzip on;
  gzip_proxied any;
  gzip_comp_level 4;
  gzip_types text/css application/javascript image/svg+xml;

  proxy_http_version 1.1;
  proxy_set_header Upgrade $http_upgrade;
  proxy_set_header Connection 'upgrade';
  proxy_set_header Host $host;
  proxy_cache_bypass $http_upgrade;

  location / {
      root /var/www/html;
      index index.html;
  }

  location /_next/static {
      proxy_cache STATIC;
      proxy_pass http://metakrew.com_upstream/_next/static;

      # For testing cache - remove before deploying to production
      # add_header X-Cache-Status $upstream_cache_status;

      # try_files $uri $uri/ =404;
      # try_files $uri $uri/ /index.php?$query_string;
  }

  location /metakrew.com/ {
    # rewrite ^/metakrew.com(.*)$ $1 break;

    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_pass http://metakrew.com_upstream/;
    proxy_redirect off;
  }

  location /new {
    # root /var/www/html;
    # rewrite ^/new?$ /new.html break; 
    # rewrite ^/metakrew.com(.*)$ $1 break;

    # proxy_pass http://example.com/app1/$request_uri;
    # return 301 $scheme://example.com/articles;
    return 301 http://metakrew.com_upstream/;
  }
}
